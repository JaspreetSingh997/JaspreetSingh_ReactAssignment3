{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\assignment-3-React\\\\src\\\\MovieArea.jsx\",\n  _s = $RefreshSig$();\nimport { MovieBox } from \"./Moviebox/MovieBox\";\nimport json from \"./json/data.json\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MovieArea(_ref) {\n  _s();\n  let {\n    searchInput,\n    selectedMovie,\n    setSelectedMovie,\n    selectedNav\n  } = _ref;\n  const [favourites, setFav] = useState([]);\n  function assignFav(movie) {\n    if (favourites.includes(movie)) {\n      setFav(favourites.filter(e => e.id !== movie.id));\n    } else {\n      setFav([...favourites, movie]);\n    }\n  }\n  let key = \"movies-in-theaters\";\n  switch (selectedNav) {\n    case 0:\n      key = \"movies-in-theaters\";\n      break;\n    case 1:\n      key = [\"movies-coming\"];\n      break;\n    case 2:\n      key = \"top-rated-india\";\n      break;\n    case 3:\n      key = \"top-rated-movies\";\n      break;\n    case 4:\n      json.favourit = Array.from(favourites);\n      key = \"favourit\";\n      break;\n    default:\n      json.custom = new Set();\n      for (const [_, v] of Object.entries(json)) {\n        for (const val of v) {\n          if (val.title.toLowerCase().includes(selectedNav.toString().toLowerCase())) {\n            json.custom.add(val);\n          }\n        }\n      }\n      json.custom = Array.from(json.custom);\n      key = \"custom\";\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: json[key].map(e => {\n      return /*#__PURE__*/_jsxDEV(MovieBox, {\n        selectedMovie: selectedMovie,\n        setSelectedMovie: setSelectedMovie,\n        isFav: favourites.includes(e),\n        assignFav: assignFav,\n        movie: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieArea, \"1Jlc3TzOFJKf6E0c4aVTFBRN0EE=\");\n_c = MovieArea;\nvar _c;\n$RefreshReg$(_c, \"MovieArea\");","map":{"version":3,"names":["MovieBox","json","useEffect","useState","MovieArea","searchInput","selectedMovie","setSelectedMovie","selectedNav","favourites","setFav","assignFav","movie","includes","filter","e","id","key","favourit","Array","from","custom","Set","_","v","Object","entries","val","title","toLowerCase","toString","add","padding","map"],"sources":["C:/Users/DELL/Downloads/assignment-3-React/src/MovieArea.jsx"],"sourcesContent":["import { MovieBox } from \"./Moviebox/MovieBox\";\nimport json from \"./json/data.json\";\nimport { useEffect, useState } from \"react\";\n\nexport function MovieArea({\n  searchInput,\n  selectedMovie,\n  setSelectedMovie,\n  selectedNav,\n}) {\n  const [favourites, setFav] = useState([]);\n  function assignFav(movie) {\n    if (favourites.includes(movie)) {\n      setFav(favourites.filter((e) => e.id !== movie.id));\n    } else {\n      setFav([...favourites, movie]);\n    }\n  }\n  let key = \"movies-in-theaters\";\n\n  switch (selectedNav) {\n    case 0:\n      key = \"movies-in-theaters\";\n      break;\n    case 1:\n      key = [\"movies-coming\"];\n      break;\n    case 2:\n      key = \"top-rated-india\";\n      break;\n    case 3:\n      key = \"top-rated-movies\";\n      break;\n    case 4:\n      json.favourit = Array.from(favourites);\n      key = \"favourit\";\n      break;\n    default:\n      json.custom = new Set();\n      for (const [_, v] of Object.entries(json)) {\n        for (const val of v) {\n          if (val.title.toLowerCase().includes(selectedNav.toString().toLowerCase())) {\n            json.custom.add(val);\n          }\n        }\n      }\n      json.custom = Array.from(json.custom);\n      key = \"custom\";\n\n      break;\n  }\n\n  return (\n    <div\n      style={{\n        padding: \"20px\",\n      }}\n    >\n      {json[key].map((e) => {\n        return (\n          <MovieBox\n            selectedMovie={selectedMovie}\n            setSelectedMovie={setSelectedMovie}\n            isFav={favourites.includes(e)}\n            assignFav={assignFav}\n            movie={e}\n          />\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,qBAAqB;AAC9C,OAAOC,IAAI,MAAM,kBAAkB;AACnC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,OAAO,SAASC,SAAS,OAKtB;EAAA;EAAA,IALuB;IACxBC,WAAW;IACXC,aAAa;IACbC,gBAAgB;IAChBC;EACF,CAAC;EACC,MAAM,CAACC,UAAU,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACzC,SAASQ,SAAS,CAACC,KAAK,EAAE;IACxB,IAAIH,UAAU,CAACI,QAAQ,CAACD,KAAK,CAAC,EAAE;MAC9BF,MAAM,CAACD,UAAU,CAACK,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,KAAK,CAACI,EAAE,CAAC,CAAC;IACrD,CAAC,MAAM;MACLN,MAAM,CAAC,CAAC,GAAGD,UAAU,EAAEG,KAAK,CAAC,CAAC;IAChC;EACF;EACA,IAAIK,GAAG,GAAG,oBAAoB;EAE9B,QAAQT,WAAW;IACjB,KAAK,CAAC;MACJS,GAAG,GAAG,oBAAoB;MAC1B;IACF,KAAK,CAAC;MACJA,GAAG,GAAG,CAAC,eAAe,CAAC;MACvB;IACF,KAAK,CAAC;MACJA,GAAG,GAAG,iBAAiB;MACvB;IACF,KAAK,CAAC;MACJA,GAAG,GAAG,kBAAkB;MACxB;IACF,KAAK,CAAC;MACJhB,IAAI,CAACiB,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACX,UAAU,CAAC;MACtCQ,GAAG,GAAG,UAAU;MAChB;IACF;MACEhB,IAAI,CAACoB,MAAM,GAAG,IAAIC,GAAG,EAAE;MACvB,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACzB,IAAI,CAAC,EAAE;QACzC,KAAK,MAAM0B,GAAG,IAAIH,CAAC,EAAE;UACnB,IAAIG,GAAG,CAACC,KAAK,CAACC,WAAW,EAAE,CAAChB,QAAQ,CAACL,WAAW,CAACsB,QAAQ,EAAE,CAACD,WAAW,EAAE,CAAC,EAAE;YAC1E5B,IAAI,CAACoB,MAAM,CAACU,GAAG,CAACJ,GAAG,CAAC;UACtB;QACF;MACF;MACA1B,IAAI,CAACoB,MAAM,GAAGF,KAAK,CAACC,IAAI,CAACnB,IAAI,CAACoB,MAAM,CAAC;MACrCJ,GAAG,GAAG,QAAQ;MAEd;EAAM;EAGV,oBACE;IACE,KAAK,EAAE;MACLe,OAAO,EAAE;IACX,CAAE;IAAA,UAED/B,IAAI,CAACgB,GAAG,CAAC,CAACgB,GAAG,CAAElB,CAAC,IAAK;MACpB,oBACE,QAAC,QAAQ;QACP,aAAa,EAAET,aAAc;QAC7B,gBAAgB,EAAEC,gBAAiB;QACnC,KAAK,EAAEE,UAAU,CAACI,QAAQ,CAACE,CAAC,CAAE;QAC9B,SAAS,EAAEJ,SAAU;QACrB,KAAK,EAAEI;MAAE;QAAA;QAAA;QAAA;MAAA,QACT;IAEN,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAnEeX,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}